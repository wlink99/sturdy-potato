{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/henryvandiver/code-project?scriptVersionId=189958125\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"3cbaf138","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-07-27T05:43:49.454935Z","iopub.status.busy":"2024-07-27T05:43:49.454549Z","iopub.status.idle":"2024-07-27T05:46:53.496797Z","shell.execute_reply":"2024-07-27T05:46:53.495638Z"},"papermill":{"duration":184.049687,"end_time":"2024-07-27T05:46:53.499574","exception":false,"start_time":"2024-07-27T05:43:49.449887","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading location list.\n","+ Downloading for ABR\n","+ Downloading for ANW\n","+ Downloading for AIT\n","+ Downloading for AEL\n","+ Downloading for BVN\n","+ Downloading for AXN\n","+ Downloading for AXA\n","+ Downloading for AIA\n","+ Downloading for AMW\n","+ Downloading for IKV\n","+ Downloading for AQP\n","+ Downloading for AIO\n","+ Downloading for ADU\n","+ Downloading for AUH\n","+ Downloading for AUM\n","+ Downloading for BDE\n","+ Downloading for 20U\n","+ Downloading for BIE\n","+ Downloading for BJI\n","+ Downloading for BBB\n","+ Downloading for FOZ\n","+ Downloading for BIS\n","+ Downloading for BTA\n","+ Downloading for BNW\n","+ Downloading for D09\n","+ Downloading for BWW\n","+ Downloading for BRD\n","+ Downloading for BTN\n","+ Downloading for BBW\n","+ Downloading for BKX\n","+ Downloading for CFE\n","+ Downloading for 2WX\n","+ Downloading for BRL\n","+ Downloading for CSB\n","+ Downloading for CBG\n","+ Downloading for CNB\n","+ Downloading for 9D7\n","+ Downloading for 46D\n","+ Downloading for CIN\n","+ Downloading for 2C8\n","+ Downloading for CID\n","+ Downloading for TVK\n","+ Downloading for CDR\n","+ Downloading for 9V9\n","+ Downloading for CNC\n","+ Downloading for CCY\n","+ Downloading for CKP\n","+ Downloading for ICL\n","+ Downloading for CAV\n","+ Downloading for CWI\n","+ Downloading for COQ\n","+ Downloading for OLU\n","+ Downloading for CQM\n","+ Downloading for CBF\n","+ Downloading for CDD\n","+ Downloading for CSQ\n","+ Downloading for CKN\n","+ Downloading for D50\n","+ Downloading for CUT\n","+ Downloading for DEH\n","+ Downloading for DNS\n","+ Downloading for 6E5\n","+ Downloading for DSM\n","+ Downloading for DTL\n","+ Downloading for DVL\n","+ Downloading for DIK\n","+ Downloading for TOB\n","+ Downloading for DBQ\n","+ Downloading for DLH\n","+ Downloading for DYT\n","+ Downloading for 1EN\n","+ Downloading for Y63\n","+ Downloading for RCA\n","+ Downloading for ELO\n","+ Downloading for EST\n","+ Downloading for EVM\n","+ Downloading for FFL\n","+ Downloading for FRM\n","+ Downloading for D07\n","+ Downloading for FNB\n","+ Downloading for FAR\n","+ Downloading for FBL\n","+ Downloading for FFM\n","+ Downloading for FGN\n","+ Downloading for FXY\n","+ Downloading for FOD\n","+ Downloading for FSW\n","+ Downloading for FSE\n","+ Downloading for FET\n","+ Downloading for N60\n","+ Downloading for GYL\n","+ Downloading for D57\n","+ Downloading for GHW\n","+ Downloading for GRN\n","+ Downloading for GAF\n","+ Downloading for GFK\n","+ Downloading for RDR\n","+ Downloading for GRI\n","+ Downloading for GNA\n","+ Downloading for CKC\n","+ Downloading for GPZ\n","+ Downloading for GDB\n","+ Downloading for GGF\n","+ Downloading for GGI\n","+ Downloading for 1HW\n","+ Downloading for GWR\n","+ Downloading for HCO\n","+ Downloading for HPT\n","+ Downloading for HNR\n","+ Downloading for 1CW\n","+ Downloading for 5H4\n","+ Downloading for HSI\n","+ Downloading for HZE\n","+ Downloading for HJH\n","+ Downloading for HEI\n","+ Downloading for HIB\n","+ Downloading for 04W\n","+ Downloading for HDE\n","+ Downloading for HON\n","+ Downloading for HCD\n","+ Downloading for IML\n","+ Downloading for IIB\n","+ Downloading for INL\n","+ Downloading for IOW\n","+ Downloading for IFA\n","+ Downloading for MJQ\n","+ Downloading for JMS\n","+ Downloading for 1JN\n","+ Downloading for EAR\n","+ Downloading for EOK\n","+ Downloading for 9Y1\n","+ Downloading for IBM\n","+ Downloading for OXV\n","+ Downloading for LWD\n","+ Downloading for D55\n","+ Downloading for LRJ\n","+ Downloading for LXN\n","+ Downloading for 1LN\n","+ Downloading for LNK\n","+ Downloading for 7L2\n","+ Downloading for LJF\n","+ Downloading for LXL\n","+ Downloading for 14Y\n","+ Downloading for 1BW\n","+ Downloading for XVG\n","+ Downloading for LYV\n","+ Downloading for MDS\n","+ Downloading for DXX\n","+ Downloading for 3N8\n","+ Downloading for Y19\n","+ Downloading for MKT\n","+ Downloading for MGG\n","+ Downloading for MML\n","+ Downloading for MIW\n","+ Downloading for MCW\n","+ Downloading for MCK\n","+ Downloading for HZX\n","+ Downloading for 1D1\n","+ Downloading for MLE\n","+ Downloading for ANE\n","+ Downloading for MSP\n","+ Downloading for MIC\n","+ Downloading for FCM\n","+ Downloading for MIB\n","+ Downloading for MOT\n","+ Downloading for MHE\n","+ Downloading for LVN\n","+ Downloading for MBG\n","+ Downloading for MVE\n","+ Downloading for MXO\n","+ Downloading for JKJ\n","+ Downloading for MZH\n","+ Downloading for JMR\n","+ Downloading for MOX\n","+ Downloading for MPZ\n","+ Downloading for MUT\n","+ Downloading for AFK\n","+ Downloading for TNU\n","+ Downloading for ULM\n","+ Downloading for OFK\n","+ Downloading for LBF\n","+ Downloading for 2D5\n","+ Downloading for OLZ\n","+ Downloading for OFF\n","+ Downloading for OGA\n","+ Downloading for OVL\n","+ Downloading for OMA\n","+ Downloading for ONL\n","+ Downloading for ODX\n","+ Downloading for ORB\n","+ Downloading for VVV\n","+ Downloading for 1ON\n","+ Downloading for I75\n","+ Downloading for OOA\n","+ Downloading for OTM\n","+ Downloading for OWA\n","+ Downloading for PKD\n","+ Downloading for PEX\n","+ Downloading for PEA\n","+ Downloading for PRO\n","+ Downloading for PHP\n","+ Downloading for PIR\n","+ Downloading for IEN\n","+ Downloading for PWC\n","+ Downloading for PMV\n","+ Downloading for FKA\n","+ Downloading for PNM\n","+ Downloading for DVN\n","+ Downloading for S32\n","+ Downloading for RAP\n","+ Downloading for RYM\n","+ Downloading for 1D8\n","+ Downloading for RDK\n","+ Downloading for RGK\n","+ Downloading for RWF\n","+ Downloading for RST\n","+ Downloading for 9MN\n","+ Downloading for 06D\n","+ Downloading for ROX\n","+ Downloading for SUO\n","+ Downloading for RUG\n","+ Downloading for ROS\n","+ Downloading for D39\n","+ Downloading for BFF\n","+ Downloading for SHL\n","+ Downloading for SDA\n","+ Downloading for SNY\n","+ Downloading for SUX\n","+ Downloading for SXK\n","+ Downloading for FSD\n","+ Downloading for 8D3\n","+ Downloading for DVP\n","+ Downloading for SGS\n","+ Downloading for SPF\n","+ Downloading for SPW\n","+ Downloading for 08D\n","+ Downloading for SYN\n","+ Downloading for SAZ\n","+ Downloading for STC\n","+ Downloading for JYG\n","+ Downloading for SLB\n","+ Downloading for STP\n","+ Downloading for 21D\n","+ Downloading for 49B\n","+ Downloading for TQE\n","+ Downloading for TIF\n","+ Downloading for TVF\n","+ Downloading for D60\n","+ Downloading for P61\n","+ Downloading for TKC\n","+ Downloading for TWM\n","+ Downloading for VTN\n","+ Downloading for BAC\n","+ Downloading for VTI\n","+ Downloading for ADC\n","+ Downloading for AHQ\n","+ Downloading for BWP\n","+ Downloading for 96D\n","+ Downloading for Y49\n","+ Downloading for RRT\n","+ Downloading for ACQ\n","+ Downloading for AWG\n","+ Downloading for VWU\n","+ Downloading for ALO\n","+ Downloading for ATY\n","+ Downloading for S25\n","+ Downloading for LCG\n","+ Downloading for EBS\n","+ Downloading for ETH\n","+ Downloading for XWA\n","+ Downloading for BDH\n","+ Downloading for MWM\n","+ Downloading for ICR\n","+ Downloading for ONA\n","+ Downloading for OTG\n","+ Downloading for YKN\n","+ Downloading for JYR\n"]}],"source":["import random\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import os\n","from scipy import stats\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","\"\"\"\n","An example script to sequentially download data from a bunch of long term\n","ASOS sites, for only a few specific variables, and save the result to\n","individual CSV files.\n","\n","You are free to use this however you want.\n","\n","Author: daryl herzmann akrherz@iastate.edu\n","\"\"\"\n","from datetime import date, datetime, timedelta\n","import requests\n","\n","def fetchlocations():\n","    localfn = 'stationlocations.csv'\n","    print('Downloading location list.')\n","    res = requests.get('https://mesonet.agron.iastate.edu/sites/networks.php?special=allasos&format=csv&nohtml', timeout=300)\n","    with open(localfn, \"w\", encoding='utf-8') as fh:\n","        fh.write(res.text)\n","fetchlocations()\n","local_list = pd.read_csv('stationlocations.csv', low_memory=False)\n","statelist = ['IA', 'MN', 'ND', 'NE', 'SD']\n","def fetch(state_id, station_id):\n","    \"\"\"Download data we are interested in!\"\"\"\n","    localfn = f\"{station_id}.csv\"\n","    print(f\"+ Downloading for {station_id}\")\n","    startdt = date.today() - timedelta(days=366)\n","    enddt = date.today() + timedelta(days=-1)\n","    uri = (\n","            f'https://mesonet.agron.iastate.edu/cgi-bin/request/daily.py?sts={startdt.year}-0{startdt.month}-{startdt.day}&ets={enddt.year}-0{enddt.month}'\n","            f'-{enddt.day}&network={state_id}&stations={station_id}&format=csv')\n","    res = requests.get(uri, timeout=300)\n","    with open(localfn, \"w\", encoding=\"utf-8\") as fh:\n","        fh.write(res.text)\n","dflist = []\n","stationlist = []\n","def main(data):\n","    for i, row in data.iterrows():\n","        for state in statelist:\n","            if row.iloc[7] == f'{state}_ASOS':\n","                    stationdata = fetch(row.iloc[7], row.iloc[0])\n","                    stationlist.append(row.iloc[0])\n","if __name__ == \"__main__\":\n","    main(local_list)\n","for station in stationlist:\n","    tempdf = f'{station}.csv'\n","    tempdf = pd.read_csv(tempdf)\n","    dflist.append(tempdf)\n","def c_to_f(tempc):\n","    return (tempc * 1.8) + 32\n","def precipresult(amount):\n","    'Determines whether it rained or not.'\n","    if amount >= 0.01:\n","        return 1\n","    return 0\n","def drysum(data):\n","    'Determines the number of consecutive days without rain.'\n","    i = 0\n","    k = []\n","    for j in data:\n","        if precipresult(j) == 1:\n","            i = 0\n","        else:\n","            i+=1\n","        k.append(i)\n","    return k\n","def corngdd(maxf, minf):\n","    'Determines number of Growing Degree Days for corn times 2.'\n","    return (max(min(maxf, 86), 50) + min(max(minf, 50), 86) - 100) / 2\n","def deliagdd(maxf, minf):\n","    return (max(min(maxf, 84), 39) + min(max(minf, 39), 84) - 78) / 2\n","def sumdeliagddcount(data):\n","    i = 0\n","    j = []\n","    for k,row in data.iterrows():\n","        i+=deliagdd(row.iloc[0], rowiloc[1])\n","        j.append(i)\n","    return j\n","def deliacycle(data):\n","    cycle = {0 : 'Emergence', 1 : 'Hatching', 2 : 'Larval', 3 : 'Pupal', 4 : 'Pre-Emergence'}\n","    k = (j - 360) % 756\n","    i = [0 if k < 54 else 1 if 54 == k else 2 if 54 < k < 421 else 3 if 421 <= k < 691 else 4 for j in data]\n","def sumcorngddcount(data):\n","    i = 0\n","    k = []\n","    for j,row in data.iterrows():\n","        if row.iloc[1] < 28:\n","            i = 0\n","        else:\n","            i+=corngdd(row.iloc[0], row.iloc[1])\n","        k.append(i)\n","    return k\n","def wmantempxn(tempf, day):\n","    'Used to calculate possible range for low and high daily temperatures, with consideration to error.'\n","    ## 667 is (2/sqrt(pi)) times the standard deviation, or the mean average error.\n","    i = [random.randrange(1024) for j in range(1,5)]\n","    return tempf + (((sum(i) - 2046) / 667) * (day * 0.44) + 1.47)\n","def hightempxn(predict, hours):\n","    return predict - ((-2046 / 667) * ((hours / 24) * 0.44 + 1.47))\n","def lowtempxn(predict, hours):\n","    return predict - ((2046 / 667) * ((hours / 24) * 0.44 + 1.47))\n","def precipchance(precip, day):\n","    i = [random.randrange(1024) for k in range(1,5)]\n","    j = 100 * ((sum(i) - 2046) / 2046) * (((0.014 * day) + 0.06) ** 0.5)\n","    k = precipresult(precip)\n","    if k == 0:\n","        return max(j, 0)\n","    else:\n","        return min(100 - j, 100)\n","def highprecip(predict, hours):\n","    return min(predict - 100 * ((-2046 / 2046) * ((((0.014 / 24) * hours) + 0.06) ** 0.5)), 100)\n","def lowprecip(predict, hours):\n","    return max(predict - 100 * ((2046 / 2046) * ((((0.014 / 24) * hours) + 0.06) ** 0.5)), 0)\n","confidence_interval = [0.005, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.975, 0.995]\n","random2 = [0.0475, 0.1095, 0.221, 0.351, 0.5, 0.649, 0.779, 0.8905, 0.9525]\n","random7 = [0.226, 0.2868, 0.358, 0.42, 0.5, 0.58, 0.642, 0.7132, 0.774]\n","random14 = [0.3035, 0.3489, 0.4003, 0.4471, 0.5, 0.5529, 0.5997, 0.6511, 0.6965]\n","random30 = [0.365, 0.3967, 0.4321, 0.4641, 0.5, 0.5359, 0.5679, 0.6033, 0.635]\n","def weathermask(maxf, minf, precip, day):\n","    \"Generates a possible prediction for a day's weather.\"\n","    resultarr=[wmantempxn(maxf, (day + 0.5)), wmantempxn(minf, day), precipchance(precip, day)]\n","    return [round(j, 2) for j in resultarr]"]},{"cell_type":"code","execution_count":2,"id":"16917a2f","metadata":{"execution":{"iopub.execute_input":"2024-07-27T05:46:53.55779Z","iopub.status.busy":"2024-07-27T05:46:53.557402Z","iopub.status.idle":"2024-07-27T05:46:53.614548Z","shell.execute_reply":"2024-07-27T05:46:53.613096Z"},"papermill":{"duration":0.093236,"end_time":"2024-07-27T05:46:53.620898","exception":false,"start_time":"2024-07-27T05:46:53.527662","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>station</th>\n","      <th>day</th>\n","      <th>max_temp_f</th>\n","      <th>min_temp_f</th>\n","      <th>max_dewpoint_f</th>\n","      <th>min_dewpoint_f</th>\n","      <th>precip_in</th>\n","      <th>avg_wind_speed_kts</th>\n","      <th>avg_wind_drct</th>\n","      <th>min_rh</th>\n","      <th>...</th>\n","      <th>snowd_in</th>\n","      <th>min_feel</th>\n","      <th>avg_feel</th>\n","      <th>max_feel</th>\n","      <th>max_wind_speed_kts</th>\n","      <th>max_wind_gust_kts</th>\n","      <th>srad_mj</th>\n","      <th>climo_high_f</th>\n","      <th>climo_low_f</th>\n","      <th>climo_precip_in</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>AXA</td>\n","      <td>2023-07-27</td>\n","      <td>89.6</td>\n","      <td>73.4</td>\n","      <td>82.4</td>\n","      <td>68.0</td>\n","      <td>NaN</td>\n","      <td>9.024390</td>\n","      <td>182.201310</td>\n","      <td>49.103626</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>73.4</td>\n","      <td>85.344475</td>\n","      <td>111.439285</td>\n","      <td>20.0</td>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>82.6</td>\n","      <td>61.1</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AXA</td>\n","      <td>2023-07-28</td>\n","      <td>89.6</td>\n","      <td>69.8</td>\n","      <td>84.2</td>\n","      <td>69.8</td>\n","      <td>NaN</td>\n","      <td>7.508711</td>\n","      <td>48.631830</td>\n","      <td>83.437645</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>69.8</td>\n","      <td>87.807335</td>\n","      <td>115.194650</td>\n","      <td>12.0</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>82.5</td>\n","      <td>61.0</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>AXA</td>\n","      <td>2023-07-29</td>\n","      <td>82.4</td>\n","      <td>62.6</td>\n","      <td>68.0</td>\n","      <td>62.6</td>\n","      <td>NaN</td>\n","      <td>6.452961</td>\n","      <td>4.580478</td>\n","      <td>54.551235</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>62.6</td>\n","      <td>73.209595</td>\n","      <td>85.376690</td>\n","      <td>11.0</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>82.4</td>\n","      <td>61.0</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>AXA</td>\n","      <td>2023-07-30</td>\n","      <td>82.4</td>\n","      <td>57.2</td>\n","      <td>66.2</td>\n","      <td>57.2</td>\n","      <td>NaN</td>\n","      <td>3.480836</td>\n","      <td>16.568748</td>\n","      <td>48.054200</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>57.2</td>\n","      <td>70.954740</td>\n","      <td>83.979935</td>\n","      <td>8.0</td>\n","      <td>12.0</td>\n","      <td>NaN</td>\n","      <td>82.3</td>\n","      <td>60.9</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>AXA</td>\n","      <td>2023-07-31</td>\n","      <td>84.2</td>\n","      <td>62.6</td>\n","      <td>68.0</td>\n","      <td>62.6</td>\n","      <td>NaN</td>\n","      <td>5.806950</td>\n","      <td>114.007416</td>\n","      <td>54.798595</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>62.6</td>\n","      <td>74.533020</td>\n","      <td>87.403290</td>\n","      <td>9.0</td>\n","      <td>13.0</td>\n","      <td>NaN</td>\n","      <td>82.2</td>\n","      <td>60.8</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>361</th>\n","      <td>AXA</td>\n","      <td>2024-07-22</td>\n","      <td>84.2</td>\n","      <td>62.6</td>\n","      <td>69.8</td>\n","      <td>62.6</td>\n","      <td>NaN</td>\n","      <td>2.550523</td>\n","      <td>278.506260</td>\n","      <td>54.551235</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>62.6</td>\n","      <td>73.481250</td>\n","      <td>86.502110</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>83.0</td>\n","      <td>61.3</td>\n","      <td>0.14</td>\n","    </tr>\n","    <tr>\n","      <th>362</th>\n","      <td>AXA</td>\n","      <td>2024-07-23</td>\n","      <td>80.6</td>\n","      <td>64.4</td>\n","      <td>71.6</td>\n","      <td>60.8</td>\n","      <td>NaN</td>\n","      <td>4.602787</td>\n","      <td>320.751130</td>\n","      <td>57.362946</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>64.4</td>\n","      <td>73.650505</td>\n","      <td>83.293360</td>\n","      <td>15.0</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>82.9</td>\n","      <td>61.2</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>363</th>\n","      <td>AXA</td>\n","      <td>2024-07-24</td>\n","      <td>77.0</td>\n","      <td>66.2</td>\n","      <td>73.4</td>\n","      <td>66.2</td>\n","      <td>1.43</td>\n","      <td>5.738676</td>\n","      <td>79.325400</td>\n","      <td>73.780556</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>66.2</td>\n","      <td>70.903830</td>\n","      <td>77.000000</td>\n","      <td>10.0</td>\n","      <td>16.0</td>\n","      <td>NaN</td>\n","      <td>82.8</td>\n","      <td>61.2</td>\n","      <td>0.14</td>\n","    </tr>\n","    <tr>\n","      <th>364</th>\n","      <td>AXA</td>\n","      <td>2024-07-25</td>\n","      <td>80.6</td>\n","      <td>62.6</td>\n","      <td>71.6</td>\n","      <td>62.6</td>\n","      <td>NaN</td>\n","      <td>7.689896</td>\n","      <td>127.473366</td>\n","      <td>69.521370</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>62.6</td>\n","      <td>71.962530</td>\n","      <td>84.571220</td>\n","      <td>13.0</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>82.7</td>\n","      <td>61.2</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>365</th>\n","      <td>AXA</td>\n","      <td>2024-07-26</td>\n","      <td>84.2</td>\n","      <td>68.0</td>\n","      <td>78.8</td>\n","      <td>68.0</td>\n","      <td>NaN</td>\n","      <td>10.653710</td>\n","      <td>149.957260</td>\n","      <td>79.039246</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>68.0</td>\n","      <td>77.898320</td>\n","      <td>96.096900</td>\n","      <td>15.0</td>\n","      <td>22.0</td>\n","      <td>NaN</td>\n","      <td>82.7</td>\n","      <td>61.1</td>\n","      <td>0.13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>366 rows × 23 columns</p>\n","</div>"],"text/plain":["    station         day  max_temp_f  min_temp_f  max_dewpoint_f  \\\n","0       AXA  2023-07-27        89.6        73.4            82.4   \n","1       AXA  2023-07-28        89.6        69.8            84.2   \n","2       AXA  2023-07-29        82.4        62.6            68.0   \n","3       AXA  2023-07-30        82.4        57.2            66.2   \n","4       AXA  2023-07-31        84.2        62.6            68.0   \n","..      ...         ...         ...         ...             ...   \n","361     AXA  2024-07-22        84.2        62.6            69.8   \n","362     AXA  2024-07-23        80.6        64.4            71.6   \n","363     AXA  2024-07-24        77.0        66.2            73.4   \n","364     AXA  2024-07-25        80.6        62.6            71.6   \n","365     AXA  2024-07-26        84.2        68.0            78.8   \n","\n","     min_dewpoint_f  precip_in  avg_wind_speed_kts  avg_wind_drct     min_rh  \\\n","0              68.0        NaN            9.024390     182.201310  49.103626   \n","1              69.8        NaN            7.508711      48.631830  83.437645   \n","2              62.6        NaN            6.452961       4.580478  54.551235   \n","3              57.2        NaN            3.480836      16.568748  48.054200   \n","4              62.6        NaN            5.806950     114.007416  54.798595   \n","..              ...        ...                 ...            ...        ...   \n","361            62.6        NaN            2.550523     278.506260  54.551235   \n","362            60.8        NaN            4.602787     320.751130  57.362946   \n","363            66.2       1.43            5.738676      79.325400  73.780556   \n","364            62.6        NaN            7.689896     127.473366  69.521370   \n","365            68.0        NaN           10.653710     149.957260  79.039246   \n","\n","     ...  snowd_in  min_feel   avg_feel    max_feel  max_wind_speed_kts  \\\n","0    ...       NaN      73.4  85.344475  111.439285                20.0   \n","1    ...       NaN      69.8  87.807335  115.194650                12.0   \n","2    ...       NaN      62.6  73.209595   85.376690                11.0   \n","3    ...       NaN      57.2  70.954740   83.979935                 8.0   \n","4    ...       NaN      62.6  74.533020   87.403290                 9.0   \n","..   ...       ...       ...        ...         ...                 ...   \n","361  ...       NaN      62.6  73.481250   86.502110                 7.0   \n","362  ...       NaN      64.4  73.650505   83.293360                15.0   \n","363  ...       NaN      66.2  70.903830   77.000000                10.0   \n","364  ...       NaN      62.6  71.962530   84.571220                13.0   \n","365  ...       NaN      68.0  77.898320   96.096900                15.0   \n","\n","     max_wind_gust_kts  srad_mj  climo_high_f  climo_low_f  climo_precip_in  \n","0                 28.0      NaN          82.6         61.1             0.12  \n","1                 18.0      NaN          82.5         61.0             0.13  \n","2                 14.0      NaN          82.4         61.0             0.13  \n","3                 12.0      NaN          82.3         60.9             0.12  \n","4                 13.0      NaN          82.2         60.8             0.13  \n","..                 ...      ...           ...          ...              ...  \n","361                NaN      NaN          83.0         61.3             0.14  \n","362               20.0      NaN          82.9         61.2             0.13  \n","363               16.0      NaN          82.8         61.2             0.14  \n","364               18.0      NaN          82.7         61.2             0.13  \n","365               22.0      NaN          82.7         61.1             0.13  \n","\n","[366 rows x 23 columns]"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["dflist[6]"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30646,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":187.974515,"end_time":"2024-07-27T05:46:54.281145","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-07-27T05:43:46.30663","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}