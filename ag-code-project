{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/henryvandiver/code-project?scriptVersionId=189824580\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"a28ede1d","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-07-26T06:21:23.884276Z","iopub.status.busy":"2024-07-26T06:21:23.88383Z","iopub.status.idle":"2024-07-26T06:21:26.31161Z","shell.execute_reply":"2024-07-26T06:21:26.310029Z"},"papermill":{"duration":2.435831,"end_time":"2024-07-26T06:21:26.314608","exception":false,"start_time":"2024-07-26T06:21:23.878777","status":"completed"},"tags":[]},"outputs":[],"source":["import random\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import os\n","from scipy import stats\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))"]},{"cell_type":"code","execution_count":2,"id":"7eb96622","metadata":{"execution":{"iopub.execute_input":"2024-07-26T06:21:26.322901Z","iopub.status.busy":"2024-07-26T06:21:26.322359Z","iopub.status.idle":"2024-07-26T06:21:29.814388Z","shell.execute_reply":"2024-07-26T06:21:29.813038Z"},"papermill":{"duration":3.499337,"end_time":"2024-07-26T06:21:29.817309","exception":false,"start_time":"2024-07-26T06:21:26.317972","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["+ Downloading for IA\n"]}],"source":["\"\"\"\n","An example script to sequentially download data from a bunch of long term\n","ASOS sites, for only a few specific variables, and save the result to\n","individual CSV files.\n","\n","You are free to use this however you want.\n","\n","Author: daryl herzmann akrherz@iastate.edu\n","\"\"\"\n","import os\n","from datetime import date, datetime, timedelta\n","\n","import requests\n","\n","\n","def fetch(state_id):\n","    \"\"\"Download data we are interested in!\"\"\"\n","    localfn = f\"{state_id}.csv\"\n","    print(f\"+ Downloading for {state_id}\")\n","    startdt = date.today() - timedelta(days=366)\n","    enddt = date.today() + timedelta(days=-1)\n","    uri = (\n","            f'https://mesonet.agron.iastate.edu/cgi-bin/request/daily.py?sts={startdt.year}-0{startdt.month}-{startdt.day}&ets={enddt.year}-0{enddt.month}'\n","            f'-{enddt.day}&network={state_id}_ASOS&stations=_ALL&format=csv'\n","    )\n","    res = requests.get(uri, timeout=300)\n","    with open(localfn, \"w\", encoding=\"utf-8\") as fh:\n","        fh.write(res.text)\n","\n","\n","\n","stationlist = ['IA']\n","def main():   \n","    for state_id in stationlist:\n","        fetch(state_id)\n","\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"code","execution_count":3,"id":"ce284cbe","metadata":{"execution":{"iopub.execute_input":"2024-07-26T06:21:29.826322Z","iopub.status.busy":"2024-07-26T06:21:29.825155Z","iopub.status.idle":"2024-07-26T06:21:29.938604Z","shell.execute_reply":"2024-07-26T06:21:29.937215Z"},"papermill":{"duration":0.120762,"end_time":"2024-07-26T06:21:29.941414","exception":false,"start_time":"2024-07-26T06:21:29.820652","status":"completed"},"tags":[]},"outputs":[],"source":["dflist = []\n","for i in range(len(stationlist)):\n","    temp_df = pd.read_csv(stationlist[i]+'.csv', low_memory=False)\n","    dflist.append(temp_df)"]},{"cell_type":"code","execution_count":4,"id":"f9fceb21","metadata":{"execution":{"iopub.execute_input":"2024-07-26T06:21:29.949831Z","iopub.status.busy":"2024-07-26T06:21:29.949416Z","iopub.status.idle":"2024-07-26T06:21:29.978576Z","shell.execute_reply":"2024-07-26T06:21:29.977119Z"},"papermill":{"duration":0.036901,"end_time":"2024-07-26T06:21:29.981563","exception":false,"start_time":"2024-07-26T06:21:29.944662","status":"completed"},"tags":[]},"outputs":[],"source":["def c_to_f(tempc):\n","    return (tempc * 1.8) + 32\n","def precipresult(amount):\n","    'Determines whether it rained or not.'\n","    if amount >= 0.01:\n","        return 1\n","    return 0\n","def precipsum(data):\n","    'Determines the number of consecutive days without rain.'\n","    i = 0\n","    k = []\n","    for j in data:\n","        if precipresult(j) == 1:\n","            i = 0\n","        else:\n","            i+=1\n","        k.append(i)\n","    return k\n","def corngdd(maxf, minf):\n","    'Determines number of Growing Degree Days for corn times 2.'\n","    return (max(min(maxf, 86), 50) + min(max(minf, 50), 86) - 100) / 2\n","def deliagdd(maxf, minf):\n","    return (max(min(maxf, 84), 39) + min(max(minf, 39), 84) - 78) / 2\n","def sumdeliagddcount(data):\n","    i = 0\n","    j = []\n","    for k,row in data.iterrows():\n","        i+=deliagdd(row.iloc[0], rowiloc[1])\n","        j.append(i)\n","    return j\n","def deliacycle(data):\n","    cycle = {0 : 'Emergence', 1 : 'Hatching', 2 : 'Larval', 3 : 'Pupal', 4 : 'Pre-Emergence'}\n","    k = (j - 360) % 756\n","    i = [0 if k < 54 else 1 if 54 == k else 2 if 54 < k < 421 else 3 if 421 <= k < 691 else 4 for j in data]\n","def sumcorngddcount(data):\n","    i = 0\n","    k = []\n","    for j,row in data.iterrows():\n","        if row.iloc[1] < 28:\n","            i = 0\n","        else:\n","            i+=corngdd(row.iloc[0], row.iloc[1])\n","        k.append(i)\n","    return k\n","def wmantempxn(tempf, day):\n","    'Used to calculate possible range for low and high daily temperatures, with consideration to error.'\n","    ## 667 is (2/sqrt(pi)) times the standard deviation, or the mean average error.\n","    i = [random.randrange(1024) for j in range(1,5)]\n","    return tempf + (((sum(i) - 2046) / 667) * (day * 0.44) + 1.47)\n","def hightempxn(predict, hours):\n","    return predict - ((-2046 / 667) * ((hours / 24) * 0.44 + 1.47))\n","def lowtempxn(predict, hours):\n","    return predict - ((2046 / 667) * ((hours / 24) * 0.44 + 1.47))\n","def precipchance(precip, day):\n","    i = [random.randrange(1024) for k in range(1,5)]\n","    j = 100 * ((sum(i) - 2046) / 2046) * (((0.014 * day) + 0.06) ** 0.5)\n","    k = precipresult(precip)\n","    if k == 0:\n","        return max(j, 0)\n","    else:\n","        return min(100 - j, 100)\n","def highprecip(predict, hours):\n","    return min(predict - 100 * ((-2046 / 2046) * ((((0.014 / 24) * hours) + 0.06) ** 0.5)), 100)\n","def lowprecip(predict, hours):\n","    return max(predict - 100 * ((2046 / 2046) * ((((0.014 / 24) * hours) + 0.06) ** 0.5)), 0)\n","confidence_interval = [0.005, 0.025, 0.1, 0.25, 0.5, 0.75, 0.9, 0.975, 0.995]\n","random2 = [0.0475, 0.1095, 0.221, 0.351, 0.5, 0.649, 0.779, 0.8905, 0.9525]\n","random7 = [0.226, 0.2868, 0.358, 0.42, 0.5, 0.58, 0.642, 0.7132, 0.774]\n","random14 = [0.3035, 0.3489, 0.4003, 0.4471, 0.5, 0.5529, 0.5997, 0.6511, 0.6965]\n","random30 = [0.365, 0.3967, 0.4321, 0.4641, 0.5, 0.5359, 0.5679, 0.6033, 0.635]\n","def weathermask(maxf, minf, precip, day):\n","    \"Generates a possible prediction for a day's weather.\"\n","    resultarr=[wmantempxn(maxf, (day + 0.5)), wmantempxn(minf, day), precipchance(precip, day)]\n","    return [round(j, 2) for j in resultarr]"]},{"cell_type":"code","execution_count":5,"id":"affe77f4","metadata":{"execution":{"iopub.execute_input":"2024-07-26T06:21:29.989673Z","iopub.status.busy":"2024-07-26T06:21:29.989234Z","iopub.status.idle":"2024-07-26T06:21:30.047647Z","shell.execute_reply":"2024-07-26T06:21:30.046337Z"},"papermill":{"duration":0.065717,"end_time":"2024-07-26T06:21:30.050466","exception":false,"start_time":"2024-07-26T06:21:29.984749","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>station</th>\n","      <th>day</th>\n","      <th>max_temp_f</th>\n","      <th>min_temp_f</th>\n","      <th>max_dewpoint_f</th>\n","      <th>min_dewpoint_f</th>\n","      <th>precip_in</th>\n","      <th>avg_wind_speed_kts</th>\n","      <th>avg_wind_drct</th>\n","      <th>min_rh</th>\n","      <th>...</th>\n","      <th>snowd_in</th>\n","      <th>min_feel</th>\n","      <th>avg_feel</th>\n","      <th>max_feel</th>\n","      <th>max_wind_speed_kts</th>\n","      <th>max_wind_gust_kts</th>\n","      <th>srad_mj</th>\n","      <th>climo_high_f</th>\n","      <th>climo_low_f</th>\n","      <th>climo_precip_in</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ADU</td>\n","      <td>2023-07-26</td>\n","      <td>96.8</td>\n","      <td>66.2</td>\n","      <td>78.8</td>\n","      <td>62.6</td>\n","      <td>0.0000</td>\n","      <td>0.551237</td>\n","      <td>357.433300</td>\n","      <td>44.408447</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>66.2</td>\n","      <td>85.226265</td>\n","      <td>107.445080</td>\n","      <td>12.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>82.6</td>\n","      <td>61.5</td>\n","      <td>0.11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>AIO</td>\n","      <td>2023-07-26</td>\n","      <td>93.2</td>\n","      <td>68.0</td>\n","      <td>84.2</td>\n","      <td>68.0</td>\n","      <td>0.0000</td>\n","      <td>2.898955</td>\n","      <td>348.802700</td>\n","      <td>66.948990</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>68.0</td>\n","      <td>92.757640</td>\n","      <td>121.135300</td>\n","      <td>10.000000</td>\n","      <td>18.000000</td>\n","      <td>NaN</td>\n","      <td>86.2</td>\n","      <td>63.7</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HNR</td>\n","      <td>2023-07-26</td>\n","      <td>93.2</td>\n","      <td>68.0</td>\n","      <td>80.6</td>\n","      <td>68.0</td>\n","      <td>NaN</td>\n","      <td>3.278746</td>\n","      <td>337.774320</td>\n","      <td>59.468610</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>68.0</td>\n","      <td>86.965360</td>\n","      <td>113.519680</td>\n","      <td>12.000000</td>\n","      <td>16.000000</td>\n","      <td>NaN</td>\n","      <td>85.8</td>\n","      <td>63.6</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>IIB</td>\n","      <td>2023-07-26</td>\n","      <td>90.0</td>\n","      <td>73.0</td>\n","      <td>74.0</td>\n","      <td>65.5</td>\n","      <td>NaN</td>\n","      <td>4.611150</td>\n","      <td>93.160880</td>\n","      <td>44.750950</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>73.0</td>\n","      <td>80.550200</td>\n","      <td>95.487274</td>\n","      <td>16.000000</td>\n","      <td>24.000000</td>\n","      <td>NaN</td>\n","      <td>82.7</td>\n","      <td>61.1</td>\n","      <td>0.14</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>SPW</td>\n","      <td>2023-07-26</td>\n","      <td>97.0</td>\n","      <td>73.0</td>\n","      <td>76.0</td>\n","      <td>69.0</td>\n","      <td>0.0001</td>\n","      <td>4.779369</td>\n","      <td>236.023320</td>\n","      <td>49.349415</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>73.0</td>\n","      <td>88.726000</td>\n","      <td>108.485350</td>\n","      <td>15.641572</td>\n","      <td>19.986454</td>\n","      <td>NaN</td>\n","      <td>84.2</td>\n","      <td>62.3</td>\n","      <td>0.11</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>22321</th>\n","      <td>DNS</td>\n","      <td>2024-07-25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.915195</td>\n","      <td>107.122950</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>11.000000</td>\n","      <td>14.000000</td>\n","      <td>NaN</td>\n","      <td>83.2</td>\n","      <td>63.3</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>22322</th>\n","      <td>MPZ</td>\n","      <td>2024-07-25</td>\n","      <td>78.8</td>\n","      <td>64.4</td>\n","      <td>69.8</td>\n","      <td>64.4</td>\n","      <td>0.0600</td>\n","      <td>4.706714</td>\n","      <td>95.788230</td>\n","      <td>69.521370</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>64.4</td>\n","      <td>72.013430</td>\n","      <td>78.800000</td>\n","      <td>10.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>84.8</td>\n","      <td>62.4</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>22323</th>\n","      <td>BRL</td>\n","      <td>2024-07-25</td>\n","      <td>81.0</td>\n","      <td>68.0</td>\n","      <td>71.6</td>\n","      <td>66.0</td>\n","      <td>0.2900</td>\n","      <td>5.370922</td>\n","      <td>81.856636</td>\n","      <td>69.277590</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>68.0</td>\n","      <td>74.193780</td>\n","      <td>84.911820</td>\n","      <td>12.165668</td>\n","      <td>30.414170</td>\n","      <td>NaN</td>\n","      <td>84.9</td>\n","      <td>65.6</td>\n","      <td>0.13</td>\n","    </tr>\n","    <tr>\n","      <th>22324</th>\n","      <td>ICL</td>\n","      <td>2024-07-25</td>\n","      <td>91.4</td>\n","      <td>66.2</td>\n","      <td>91.4</td>\n","      <td>66.2</td>\n","      <td>NaN</td>\n","      <td>1.738516</td>\n","      <td>90.065610</td>\n","      <td>52.230550</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>66.2</td>\n","      <td>84.370960</td>\n","      <td>139.393170</td>\n","      <td>6.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>86.0</td>\n","      <td>64.3</td>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>22325</th>\n","      <td>AIO</td>\n","      <td>2024-07-25</td>\n","      <td>87.8</td>\n","      <td>69.8</td>\n","      <td>77.0</td>\n","      <td>69.8</td>\n","      <td>NaN</td>\n","      <td>5.734983</td>\n","      <td>97.942990</td>\n","      <td>66.151820</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>69.8</td>\n","      <td>79.917720</td>\n","      <td>97.761290</td>\n","      <td>10.000000</td>\n","      <td>15.000000</td>\n","      <td>NaN</td>\n","      <td>86.2</td>\n","      <td>63.7</td>\n","      <td>0.14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>22326 rows × 23 columns</p>\n","</div>"],"text/plain":["      station         day  max_temp_f  min_temp_f  max_dewpoint_f  \\\n","0         ADU  2023-07-26        96.8        66.2            78.8   \n","1         AIO  2023-07-26        93.2        68.0            84.2   \n","2         HNR  2023-07-26        93.2        68.0            80.6   \n","3         IIB  2023-07-26        90.0        73.0            74.0   \n","4         SPW  2023-07-26        97.0        73.0            76.0   \n","...       ...         ...         ...         ...             ...   \n","22321     DNS  2024-07-25         NaN         NaN             NaN   \n","22322     MPZ  2024-07-25        78.8        64.4            69.8   \n","22323     BRL  2024-07-25        81.0        68.0            71.6   \n","22324     ICL  2024-07-25        91.4        66.2            91.4   \n","22325     AIO  2024-07-25        87.8        69.8            77.0   \n","\n","       min_dewpoint_f  precip_in  avg_wind_speed_kts  avg_wind_drct  \\\n","0                62.6     0.0000            0.551237     357.433300   \n","1                68.0     0.0000            2.898955     348.802700   \n","2                68.0        NaN            3.278746     337.774320   \n","3                65.5        NaN            4.611150      93.160880   \n","4                69.0     0.0001            4.779369     236.023320   \n","...               ...        ...                 ...            ...   \n","22321             NaN        NaN            6.915195     107.122950   \n","22322            64.4     0.0600            4.706714      95.788230   \n","22323            66.0     0.2900            5.370922      81.856636   \n","22324            66.2        NaN            1.738516      90.065610   \n","22325            69.8        NaN            5.734983      97.942990   \n","\n","          min_rh  ...  snowd_in  min_feel   avg_feel    max_feel  \\\n","0      44.408447  ...       NaN      66.2  85.226265  107.445080   \n","1      66.948990  ...       NaN      68.0  92.757640  121.135300   \n","2      59.468610  ...       NaN      68.0  86.965360  113.519680   \n","3      44.750950  ...       NaN      73.0  80.550200   95.487274   \n","4      49.349415  ...       0.0      73.0  88.726000  108.485350   \n","...          ...  ...       ...       ...        ...         ...   \n","22321        NaN  ...       NaN       NaN   0.000000         NaN   \n","22322  69.521370  ...       NaN      64.4  72.013430   78.800000   \n","22323  69.277590  ...       NaN      68.0  74.193780   84.911820   \n","22324  52.230550  ...       NaN      66.2  84.370960  139.393170   \n","22325  66.151820  ...       NaN      69.8  79.917720   97.761290   \n","\n","       max_wind_speed_kts  max_wind_gust_kts  srad_mj  climo_high_f  \\\n","0               12.000000                NaN      NaN          82.6   \n","1               10.000000          18.000000      NaN          86.2   \n","2               12.000000          16.000000      NaN          85.8   \n","3               16.000000          24.000000      NaN          82.7   \n","4               15.641572          19.986454      NaN          84.2   \n","...                   ...                ...      ...           ...   \n","22321           11.000000          14.000000      NaN          83.2   \n","22322           10.000000                NaN      NaN          84.8   \n","22323           12.165668          30.414170      NaN          84.9   \n","22324            6.000000                NaN      NaN          86.0   \n","22325           10.000000          15.000000      NaN          86.2   \n","\n","       climo_low_f  climo_precip_in  \n","0             61.5             0.11  \n","1             63.7             0.12  \n","2             63.6             0.12  \n","3             61.1             0.14  \n","4             62.3             0.11  \n","...            ...              ...  \n","22321         63.3             0.12  \n","22322         62.4             0.12  \n","22323         65.6             0.13  \n","22324         64.3             0.15  \n","22325         63.7             0.14  \n","\n","[22326 rows x 23 columns]"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["dflist[0]"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30646,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":10.295645,"end_time":"2024-07-26T06:21:30.677227","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-07-26T06:21:20.381582","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}